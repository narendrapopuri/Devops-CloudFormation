Metadate contain below sections:

AWS::CloudFormation::Authentication
AWS::CloudFormation::Init
AWS::CloudFormation::Interface
AWS::ColudFormation::Designer

------------------------------------------------

AWS::CloudFormation::Autherntication

String {

Accesskeyid : String
bucket : [Stiring, ....]
Password : String
Type : Basic/S3
Secretkey : String
URI: String
username: String
Role : String

EXAMPLE:
--------------- 

"WebServer": {
"Type": "AWS::EC2::Instance",
"DependsOn" : "BucketPolicy",
"Metadata" : {
"AWS::CloudFormation::Init" : {
"config" : {
"packages" : { "yum" : { "httpd" : [] } },
"files" : {
"/var/www/html/index.html" : {
"source" : {
"Fn::Join" : [
"", [ "http://s3.amazonaws.com/", { "Ref" : "BucketName" }, "/
index.html" ]
]
},
"mode" : "000400",
"owner" : "apache",
"group" : "apache",
"authentication" : "S3AccessCreds"
}
},
"services" : {
"sysvinit" : {
"httpd" : { "enabled" : "true", "ensureRunning" : "true" }
}
}
}
},
"AWS::CloudFormation::Authentication" : {
"S3AccessCreds" : {
"type" : "S3",
"accessKeyId" : { "Ref" : "CfnKeys" },
"secretKey" : { "Fn::GetAtt": [ "CfnKeys", "SecretAccessKey" ] }
}
}
},
"Properties": {
EC2 Resource Properties ...
}
}


-----------------------------------------------------------------------------------------------------------------------------

AWS::CloudFormation::Init
-------------------------

Config: cfn_init script

Configsets

the sequence should be like below.

Packages
groups
users
source
file
commands
services




COMMANDS
-------------

Key RequireDdescription
command-- Require---Edither an array or a string specifying the command to run. If you use an
array, you don't need to escape space characters or enclose command
parameters in quotes. Don't use the array to specify multiple commands.
env OptionaSlets environment variables for the command. This property overwrites,
rather than appends, the existing environment.
cwd ---Optional ---------The working directory.
test ------Optional ------ Atest command that determines whether cfn-init runs commands that
are specified in the command key. If the test passes, cfn-init runs the
commands. The cfn-init script runs the test in a command interpreter, such
as Bash or cmd.exe. Whether a test passes depends on the exit code that
the interpreter returns.
For Linux, the test command must return an exit code of 0 for the test to
pass. For Windows, the test command must return an %ERRORLEVEL% of
0.

Key RequireDdescription
ignoreErrors ---- Optiona ---- Al Boolean value that determines whether cfn-init continues to run if
the command in contained in the command key fails (returns a non-zero
value). Set to true if you want cfn-init to continue running even if the
command fails. Set to false if you want cfn-init to stop running if the
command fails. The default value is false.
waitAfterCompletion----- Optional --- For Windows systems only. Specifies how long to wait (in seconds) after a
command has finished in case the command causes a reboot. The default
value is 60 seconds and a value of "forever" directs cfn-init to exit and
resume only after the reboot is complete. Set this value to 0 if you don't



FILE:
-------------
To caeta a file on Server 

content
source
encoding
user
group
mode
authentication
context

Key Description
content ------ Either a string or a properly formatted JSON object. If you use a JSON object
as your content, the JSON will be written to a file on disk. Any intrinsic
functions such as Fn::GetAtt or Ref are evaluated before the JSON object is
written to disk. When you create a symlink, specify the symlink target as the
content.
Note
If you create a symlink, the helper script modifies the permissions
of the target file. Currently, you can't create a symlink without
modifying the permissions of the target file.
source ---------- A URL to load the file from. This option can't be specified with the content
key.
encoding ----- The encoding format. Only used if the content is a string. Encoding isn't
applied if you are using a source.
Valid values: plain | base64
group ------The name of the owning group for this file. Not supported for Windows
systems.
owner ------- The name of the owning user for this file. Not supported for Windows
systems.
mode  ---------A six-digit octal value representing the mode for this file. Not supported for
Windows systems. Use the first three digits for symlinks and the last three
digits for setting permissions. To create a symlink, specify 120xxx, where
xxx defines the permissions of the target file. To specify permissions for a
file, use the last three digits, such as 000644.
authentication ------------The name of an authentication method to use. This overrides
any default authentication. You can use this property
to select an authentication method you define with the
AWS::CloudFormation::Authentication (p. 248) resource.
context -------------- Specifies a context for files that are to be processed as Mustache templates.
To use this key, you must have installed aws-cfn-bootstrap 1.3â€“11 or later in
addition to pystache.


Examples

"files" : {
"/tmp/setup.mysql" : {
"content" : { "Fn::Join" : ["", [
"CREATE DATABASE ", { "Ref" : "DBName" }, ";\n",
"CREATE USER '", { "Ref" : "DBUsername" }, "'@'localhost' IDENTIFIED BY '",
{ "Ref" : "DBPassword" }, "';\n",
"GRANT ALL ON ", { "Ref" : "DBName" }, ".* TO '", { "Ref" : "DBUsername" },
"'@'localhost';\n",
"FLUSH PRIVILEGES;\n"
]]},
"mode" : "000644",
"owner" : "root",
"group" : "root"
}
}

